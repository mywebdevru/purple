name: Run app deploy

on:
  push:
    branches: [ dev ]

jobs:
  laravel-tests:

    name: Run tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: purple
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

#      - name: Create daybyday testing database
#        env:
#          PORT: ${{ job.services.mysql.ports[3306] }}
#        run: mysql -h 127.0.0.1 --port "$PORT" -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS purple;'

      - name: Run npm
        run: npm i && npm run dev

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Run composer install
        run: composer install --no-ansi --no-scripts --no-interaction --optimize-autoloader --prefer-dist

      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate
#      - name: Database setup
#        run:  php artisan migrate --seed

      - name: Passport install
        run: php artisan passport:keys

      - name: Run tests
        run: ./vendor/bin/pest
        env:
          ELASTICSEARCH_PORT: ${{ job.services.elasticsearch.ports[9200] }}


  app-deploy:

    name: Run app deploy
    runs-on: ubuntu-latest
    needs: [laravel-tests]
    steps:
      - name: pull changes from github
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: false
          script: |
            cd /var/www/html/purple/dev/purple/
            sudo php artisan optimize:clear
            sudo find ./storage/app/* -type d \( -name admin -o -name img \) -prune -o -exec rm -rf {} \;
            mkdir storage/app/avatars storage/app/summernote storage/app/wallpapers storage/app/photos
            sudo chown -R www-data:www-data ./storage/app
            sudo chmod -R g+w ./storage/app
            git pull origin dev
            composer install
            composer dump-autoload
            php artisan migrate:fresh --seed
            php artisan passport:install
            npm i
            npm run dev
            git stash
            git stash drop
            php artisan storage:link
            sudo php artisan optimize:clear
